|install with bioconda|

Installation
~~~~~~~~~~~~

1. Create a new conda environment (*optional, but strongly recommended*)

::

    conda env create -n centreseq python=3.7
    conda activate centreseq

2. Install via bioconda

   ::

    conda install -c bioconda centreseq

Usage
~~~~~

.. code-block:: none

    Usage: centreseq [OPTIONS] COMMAND [ARGS]...

      centreseq builds an annotated core genome using assemblies as input.

    Options:
      --version   Print the version and exit.
      --help      Show this message and exit.

    Commands:
      core     Given an input directory containing assemblies, establishes a core
               genome
      extract  Helper tool to extract sequences from a particular core cluster
      subset   Subset summary_report.tsv to only samples of interest
      tree     Produces output for phylogenetic tree software

Core module
^^^^^^^^^^^

The primary functionality of centreseq can be found within the the
``core`` module.

.. code-block:: none

    Usage: centreseq core [OPTIONS]

      Given an input directory containing any number of assemblies (.fasta),
      centreseq core will 1) annotate the genomes with Prokka, 2) perform self-
      clustering on each genome with MMSeqs2 linclust, 3) concatenate the self-
      clustered genomes into a single pan-genome, 4) cluster the pan-genome with
      MMSeqs2 linclust, establishing a core genome, 5) generate helpful reports
      to interrogate your dataset Note that if specified output directory
      already exists, centreseq will search for an existing Prokka directory and
      skip this step if possible.

    Options:
      -f, --fasta-dir PATH         Path to directory containing *.fasta files for
                                   input to the core pipeline  [required]
      -o, --outdir PATH            Root directory to store all output files. If
                                   this directory already exists, the pipeline
                                   will attempt to skip the Prokka step by reading
                                   in the existing Prokka output directory, but
                                   will overwrite all other existing result files.
                                   [required]
      -n, --n-cpu INTEGER          Number of CPUs to dedicate to parallelizable
                                   steps of the pipeline. Will take all available
                                   CPUs - 1 by default.
      --n-cpu-pickbest INTEGER     Number of CPUs for pick_best_nucleotide. You
                                   will need substantial RAM per CPU.
      -m, --min-seq-id FLOAT       Sets the mmseqs cluster parameter "--min-seq-
                                   id". Defaults to 0.95.
      -c, --coverage-length FLOAT  Sets the mmseqs cluster coverage parameter "-c"
                                   directly. Defaults to 0.95, which is the
                                   recommended setting.
      --no-optimize                Set this flag to skip the pick-best-nucleotide
                                   step. Setting this will improve runtime but
                                   will provide an arbitrary representative
                                   sequence rather than a representative medoid.
                                   This parameter has no effect on the number of
                                   core genes detected.
      --pairwise                   Generate pairwise comparisons of all genomes.
                                   This output file can be used to view an
                                   interactive network chart of the core genome in
                                   a web browser.
      -v, --verbose                Set this flag to enable more verbose logging.
      --version                    Use this flag to print the version and exit.
      --help                       Show this message and exit.

Tree module
^^^^^^^^^^^

Results generated via the ``core`` module can be further processed using
the ``tree`` module.

.. code-block:: none

    Usage: centreseq tree [OPTIONS]

      Processes centreseq core output files to produce files that can be fed
      into phylogenetic tree building software.

    Options:
      -s, --summary-report PATH  Path to summary_report.csv file produced by the
                                 core pipeline  [required]
      -p, --prokka-dir PATH      Path to the Prokka output directory generated by
                                 the core pipeline  [required]
      -o, --outdir PATH          Root directory to store all output files
                                 [required]
      -pct, --percentile FLOAT   Filter summary report by n_members to the top nth
                                 percentile. Defaults to 99.0.
      -n, --n-cpu INTEGER        Number of CPUs to dedicate to parallelizable
                                 steps of the pipeline.Will take all available
                                 CPUs - 1 if not specified.
      -vcf, --vcf-flag           Use this flag to generate variant calls for each
                                 cluster.
      -v, --verbose              Set this flag to enable more verbose logging.
      --version                  Use this flag to print the version and exit.
      --help                     Show this message and exit.

Subset module
^^^^^^^^^^^^^

The ``subset`` module allows for filtering of the summary report output
file generated by the ``core`` module.

.. code-block:: none

    Usage: centreseq subset [OPTIONS]

      Given an input text file of Sample IDs and a summary report, will return a
      filtered version of the summary report for genes that belong exclusively
      in the input sample ID list

    Options:
      -i, --input-samples PATH   Path to a new line separated text file containing
                                 each Sample ID to target  [required]
      -s, --summary-report PATH  Path to summary report generated by the centreseq
                                 core command, i.e. summary_report.tsv  [required]
      -o, --outpath PATH         Path to desired output file. If no value is
                                 provided, will create a new report in the same
                                 directory as the input summary report.
      --help                     Show this message and exit.

Extract module
^^^^^^^^^^^^^^

The ``extract`` module provides functionality to extract *.ffn* and
*.faa* sequences from an existing cluster detected by the ``core``
module.

.. code-block:: none

    Usage: centreseq extract [OPTIONS]

      Given the path to the centreseq core directory and the ID of a
      cluster representative, will create a multi-FASTA containing the sequences
      for all members of that cluster. Generates both an .ffn and .faa file.

    Options:
      -i, --indir PATH                Path to your centreseq output directory
                                      [required]
      -o, --outdir PATH               Root directory to store all output files
                                      [required]
      -c, --cluster_representative TEXT
                                      Name of the target cluster representative
                                      e.g. "Typhi.2299.BMH_00195"  [required]
      --version                       Use this flag to print the version and exit.
      --help                          Show this message and exit.

External Dependencies
~~~~~~~~~~~~~~~~~~~~~

These programs will be automatically installed with the conda package.

-  `Prokka <https://github.com/tseemann/prokka>`__
-  `MMseqs2 <https://github.com/soedinglab/MMseqs2>`__
-  `SeqKit <https://github.com/shenwei356/seqkit>`__
-  `MUSCLE <https://www.drive5.com/muscle/>`__
-  `SNP-sites <https://github.com/sanger-pathogens/snp-sites>`__
-  `cyvcf2 <https://github.com/brentp/cyvcf2>`__

.. |install with bioconda| image:: https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat
   :target: http://bioconda.github.io/recipes/centreseq/README.html